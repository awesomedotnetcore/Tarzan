/* tslint:disable */
//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v11.18.2.0 (NJsonSchema v9.10.66.0 (Newtonsoft.Json v9.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------
// ReSharper disable InconsistentNaming



export class Host {
    __isset!: Isset;
    address?: string | null;
    hostname?: string | null;
    upFlows!: number;
    downFlows!: number;
    octetsSent!: number;
    octetsRecv!: number;
    packetsSent!: number;
    packetsRecv!: number;

    init(data?: any) {
        if (data) {
            this.__isset = data["__isset"] ? Isset.fromJS(data["__isset"]) : new Isset();
            this.address = data["address"] !== undefined ? data["address"] : <any>null;
            this.hostname = data["hostname"] !== undefined ? data["hostname"] : <any>null;
            this.upFlows = data["upFlows"] !== undefined ? data["upFlows"] : <any>null;
            this.downFlows = data["downFlows"] !== undefined ? data["downFlows"] : <any>null;
            this.octetsSent = data["octetsSent"] !== undefined ? data["octetsSent"] : <any>null;
            this.octetsRecv = data["octetsRecv"] !== undefined ? data["octetsRecv"] : <any>null;
            this.packetsSent = data["packetsSent"] !== undefined ? data["packetsSent"] : <any>null;
            this.packetsRecv = data["packetsRecv"] !== undefined ? data["packetsRecv"] : <any>null;
        }
    }

    static fromJS(data: any): Host {
        data = typeof data === 'object' ? data : {};
        let result = new Host();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["__isset"] = this.__isset ? this.__isset.toJSON() : <any>null;
        data["address"] = this.address !== undefined ? this.address : <any>null;
        data["hostname"] = this.hostname !== undefined ? this.hostname : <any>null;
        data["upFlows"] = this.upFlows !== undefined ? this.upFlows : <any>null;
        data["downFlows"] = this.downFlows !== undefined ? this.downFlows : <any>null;
        data["octetsSent"] = this.octetsSent !== undefined ? this.octetsSent : <any>null;
        data["octetsRecv"] = this.octetsRecv !== undefined ? this.octetsRecv : <any>null;
        data["packetsSent"] = this.packetsSent !== undefined ? this.packetsSent : <any>null;
        data["packetsRecv"] = this.packetsRecv !== undefined ? this.packetsRecv : <any>null;
        return data;
    }
}

export class Isset {
    address!: boolean;
    hostname!: boolean;
    upFlows!: boolean;
    downFlows!: boolean;
    octetsSent!: boolean;
    octetsRecv!: boolean;
    packetsSent!: boolean;
    packetsRecv!: boolean;

    init(data?: any) {
        if (data) {
            this.address = data["address"] !== undefined ? data["address"] : <any>null;
            this.hostname = data["hostname"] !== undefined ? data["hostname"] : <any>null;
            this.upFlows = data["upFlows"] !== undefined ? data["upFlows"] : <any>null;
            this.downFlows = data["downFlows"] !== undefined ? data["downFlows"] : <any>null;
            this.octetsSent = data["octetsSent"] !== undefined ? data["octetsSent"] : <any>null;
            this.octetsRecv = data["octetsRecv"] !== undefined ? data["octetsRecv"] : <any>null;
            this.packetsSent = data["packetsSent"] !== undefined ? data["packetsSent"] : <any>null;
            this.packetsRecv = data["packetsRecv"] !== undefined ? data["packetsRecv"] : <any>null;
        }
    }

    static fromJS(data: any): Isset {
        data = typeof data === 'object' ? data : {};
        let result = new Isset();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["address"] = this.address !== undefined ? this.address : <any>null;
        data["hostname"] = this.hostname !== undefined ? this.hostname : <any>null;
        data["upFlows"] = this.upFlows !== undefined ? this.upFlows : <any>null;
        data["downFlows"] = this.downFlows !== undefined ? this.downFlows : <any>null;
        data["octetsSent"] = this.octetsSent !== undefined ? this.octetsSent : <any>null;
        data["octetsRecv"] = this.octetsRecv !== undefined ? this.octetsRecv : <any>null;
        data["packetsSent"] = this.packetsSent !== undefined ? this.packetsSent : <any>null;
        data["packetsRecv"] = this.packetsRecv !== undefined ? this.packetsRecv : <any>null;
        return data;
    }
}

export class Service {
    __isset!: Isset2;
    name?: string | null;
    flows!: number;
    packets!: number;
    minPackets!: number;
    maxPackets!: number;
    octets!: number;
    minOctets!: number;
    maxOctets!: number;
    minDuration!: number;
    maxDuration!: number;
    avgDuration!: number;

    init(data?: any) {
        if (data) {
            this.__isset = data["__isset"] ? Isset2.fromJS(data["__isset"]) : new Isset2();
            this.name = data["name"] !== undefined ? data["name"] : <any>null;
            this.flows = data["flows"] !== undefined ? data["flows"] : <any>null;
            this.packets = data["packets"] !== undefined ? data["packets"] : <any>null;
            this.minPackets = data["minPackets"] !== undefined ? data["minPackets"] : <any>null;
            this.maxPackets = data["maxPackets"] !== undefined ? data["maxPackets"] : <any>null;
            this.octets = data["octets"] !== undefined ? data["octets"] : <any>null;
            this.minOctets = data["minOctets"] !== undefined ? data["minOctets"] : <any>null;
            this.maxOctets = data["maxOctets"] !== undefined ? data["maxOctets"] : <any>null;
            this.minDuration = data["minDuration"] !== undefined ? data["minDuration"] : <any>null;
            this.maxDuration = data["maxDuration"] !== undefined ? data["maxDuration"] : <any>null;
            this.avgDuration = data["avgDuration"] !== undefined ? data["avgDuration"] : <any>null;
        }
    }

    static fromJS(data: any): Service {
        data = typeof data === 'object' ? data : {};
        let result = new Service();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["__isset"] = this.__isset ? this.__isset.toJSON() : <any>null;
        data["name"] = this.name !== undefined ? this.name : <any>null;
        data["flows"] = this.flows !== undefined ? this.flows : <any>null;
        data["packets"] = this.packets !== undefined ? this.packets : <any>null;
        data["minPackets"] = this.minPackets !== undefined ? this.minPackets : <any>null;
        data["maxPackets"] = this.maxPackets !== undefined ? this.maxPackets : <any>null;
        data["octets"] = this.octets !== undefined ? this.octets : <any>null;
        data["minOctets"] = this.minOctets !== undefined ? this.minOctets : <any>null;
        data["maxOctets"] = this.maxOctets !== undefined ? this.maxOctets : <any>null;
        data["minDuration"] = this.minDuration !== undefined ? this.minDuration : <any>null;
        data["maxDuration"] = this.maxDuration !== undefined ? this.maxDuration : <any>null;
        data["avgDuration"] = this.avgDuration !== undefined ? this.avgDuration : <any>null;
        return data;
    }
}

export class Isset2 {
    name!: boolean;
    flows!: boolean;
    packets!: boolean;
    minPackets!: boolean;
    maxPackets!: boolean;
    octets!: boolean;
    minOctets!: boolean;
    maxOctets!: boolean;
    minDuration!: boolean;
    maxDuration!: boolean;
    avgDuration!: boolean;

    init(data?: any) {
        if (data) {
            this.name = data["name"] !== undefined ? data["name"] : <any>null;
            this.flows = data["flows"] !== undefined ? data["flows"] : <any>null;
            this.packets = data["packets"] !== undefined ? data["packets"] : <any>null;
            this.minPackets = data["minPackets"] !== undefined ? data["minPackets"] : <any>null;
            this.maxPackets = data["maxPackets"] !== undefined ? data["maxPackets"] : <any>null;
            this.octets = data["octets"] !== undefined ? data["octets"] : <any>null;
            this.minOctets = data["minOctets"] !== undefined ? data["minOctets"] : <any>null;
            this.maxOctets = data["maxOctets"] !== undefined ? data["maxOctets"] : <any>null;
            this.minDuration = data["minDuration"] !== undefined ? data["minDuration"] : <any>null;
            this.maxDuration = data["maxDuration"] !== undefined ? data["maxDuration"] : <any>null;
            this.avgDuration = data["avgDuration"] !== undefined ? data["avgDuration"] : <any>null;
        }
    }

    static fromJS(data: any): Isset2 {
        data = typeof data === 'object' ? data : {};
        let result = new Isset2();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["name"] = this.name !== undefined ? this.name : <any>null;
        data["flows"] = this.flows !== undefined ? this.flows : <any>null;
        data["packets"] = this.packets !== undefined ? this.packets : <any>null;
        data["minPackets"] = this.minPackets !== undefined ? this.minPackets : <any>null;
        data["maxPackets"] = this.maxPackets !== undefined ? this.maxPackets : <any>null;
        data["octets"] = this.octets !== undefined ? this.octets : <any>null;
        data["minOctets"] = this.minOctets !== undefined ? this.minOctets : <any>null;
        data["maxOctets"] = this.maxOctets !== undefined ? this.maxOctets : <any>null;
        data["minDuration"] = this.minDuration !== undefined ? this.minDuration : <any>null;
        data["maxDuration"] = this.maxDuration !== undefined ? this.maxDuration : <any>null;
        data["avgDuration"] = this.avgDuration !== undefined ? this.avgDuration : <any>null;
        return data;
    }
}

export class Capture {
    id!: string;
    name?: string | null;
    type?: string | null;
    size!: number;
    createdOn!: Date;
    uploadedOn!: Date;
    hash?: string | null;
    author?: string | null;
    notes?: string | null;
    tags?: string[] | null;

    init(data?: any) {
        if (data) {
            this.id = data["id"] !== undefined ? data["id"] : <any>null;
            this.name = data["name"] !== undefined ? data["name"] : <any>null;
            this.type = data["type"] !== undefined ? data["type"] : <any>null;
            this.size = data["size"] !== undefined ? data["size"] : <any>null;
            this.createdOn = data["createdOn"] ? new Date(data["createdOn"].toString()) : <any>null;
            this.uploadedOn = data["uploadedOn"] ? new Date(data["uploadedOn"].toString()) : <any>null;
            this.hash = data["hash"] !== undefined ? data["hash"] : <any>null;
            this.author = data["author"] !== undefined ? data["author"] : <any>null;
            this.notes = data["notes"] !== undefined ? data["notes"] : <any>null;
            if (data["tags"] && data["tags"].constructor === Array) {
                this.tags = [];
                for (let item of data["tags"])
                    this.tags.push(item);
            }
        }
    }

    static fromJS(data: any): Capture {
        data = typeof data === 'object' ? data : {};
        let result = new Capture();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id !== undefined ? this.id : <any>null;
        data["name"] = this.name !== undefined ? this.name : <any>null;
        data["type"] = this.type !== undefined ? this.type : <any>null;
        data["size"] = this.size !== undefined ? this.size : <any>null;
        data["createdOn"] = this.createdOn ? this.createdOn.toISOString() : <any>null;
        data["uploadedOn"] = this.uploadedOn ? this.uploadedOn.toISOString() : <any>null;
        data["hash"] = this.hash !== undefined ? this.hash : <any>null;
        data["author"] = this.author !== undefined ? this.author : <any>null;
        data["notes"] = this.notes !== undefined ? this.notes : <any>null;
        if (this.tags && this.tags.constructor === Array) {
            data["tags"] = [];
            for (let item of this.tags)
                data["tags"].push(item);
        }
        return data;
    }
}

export class Flow {
    __isset!: Isset3;
    protocol?: string | null;
    sourceAddress?: string | null;
    sourcePort!: number;
    destinationAddress?: string | null;
    destinationPort!: number;
    flowId?: string | null;
    firstSeen!: number;
    lastSeen!: number;
    packets!: number;
    octets!: number;

    init(data?: any) {
        if (data) {
            this.__isset = data["__isset"] ? Isset3.fromJS(data["__isset"]) : new Isset3();
            this.protocol = data["protocol"] !== undefined ? data["protocol"] : <any>null;
            this.sourceAddress = data["sourceAddress"] !== undefined ? data["sourceAddress"] : <any>null;
            this.sourcePort = data["sourcePort"] !== undefined ? data["sourcePort"] : <any>null;
            this.destinationAddress = data["destinationAddress"] !== undefined ? data["destinationAddress"] : <any>null;
            this.destinationPort = data["destinationPort"] !== undefined ? data["destinationPort"] : <any>null;
            this.flowId = data["flowId"] !== undefined ? data["flowId"] : <any>null;
            this.firstSeen = data["firstSeen"] !== undefined ? data["firstSeen"] : <any>null;
            this.lastSeen = data["lastSeen"] !== undefined ? data["lastSeen"] : <any>null;
            this.packets = data["packets"] !== undefined ? data["packets"] : <any>null;
            this.octets = data["octets"] !== undefined ? data["octets"] : <any>null;
        }
    }

    static fromJS(data: any): Flow {
        data = typeof data === 'object' ? data : {};
        let result = new Flow();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["__isset"] = this.__isset ? this.__isset.toJSON() : <any>null;
        data["protocol"] = this.protocol !== undefined ? this.protocol : <any>null;
        data["sourceAddress"] = this.sourceAddress !== undefined ? this.sourceAddress : <any>null;
        data["sourcePort"] = this.sourcePort !== undefined ? this.sourcePort : <any>null;
        data["destinationAddress"] = this.destinationAddress !== undefined ? this.destinationAddress : <any>null;
        data["destinationPort"] = this.destinationPort !== undefined ? this.destinationPort : <any>null;
        data["flowId"] = this.flowId !== undefined ? this.flowId : <any>null;
        data["firstSeen"] = this.firstSeen !== undefined ? this.firstSeen : <any>null;
        data["lastSeen"] = this.lastSeen !== undefined ? this.lastSeen : <any>null;
        data["packets"] = this.packets !== undefined ? this.packets : <any>null;
        data["octets"] = this.octets !== undefined ? this.octets : <any>null;
        return data;
    }
}

export class Isset3 {
    protocol!: boolean;
    sourceAddress!: boolean;
    sourcePort!: boolean;
    destinationAddress!: boolean;
    destinationPort!: boolean;
    flowId!: boolean;
    firstSeen!: boolean;
    lastSeen!: boolean;
    packets!: boolean;
    octets!: boolean;

    init(data?: any) {
        if (data) {
            this.protocol = data["protocol"] !== undefined ? data["protocol"] : <any>null;
            this.sourceAddress = data["sourceAddress"] !== undefined ? data["sourceAddress"] : <any>null;
            this.sourcePort = data["sourcePort"] !== undefined ? data["sourcePort"] : <any>null;
            this.destinationAddress = data["destinationAddress"] !== undefined ? data["destinationAddress"] : <any>null;
            this.destinationPort = data["destinationPort"] !== undefined ? data["destinationPort"] : <any>null;
            this.flowId = data["flowId"] !== undefined ? data["flowId"] : <any>null;
            this.firstSeen = data["firstSeen"] !== undefined ? data["firstSeen"] : <any>null;
            this.lastSeen = data["lastSeen"] !== undefined ? data["lastSeen"] : <any>null;
            this.packets = data["packets"] !== undefined ? data["packets"] : <any>null;
            this.octets = data["octets"] !== undefined ? data["octets"] : <any>null;
        }
    }

    static fromJS(data: any): Isset3 {
        data = typeof data === 'object' ? data : {};
        let result = new Isset3();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["protocol"] = this.protocol !== undefined ? this.protocol : <any>null;
        data["sourceAddress"] = this.sourceAddress !== undefined ? this.sourceAddress : <any>null;
        data["sourcePort"] = this.sourcePort !== undefined ? this.sourcePort : <any>null;
        data["destinationAddress"] = this.destinationAddress !== undefined ? this.destinationAddress : <any>null;
        data["destinationPort"] = this.destinationPort !== undefined ? this.destinationPort : <any>null;
        data["flowId"] = this.flowId !== undefined ? this.flowId : <any>null;
        data["firstSeen"] = this.firstSeen !== undefined ? this.firstSeen : <any>null;
        data["lastSeen"] = this.lastSeen !== undefined ? this.lastSeen : <any>null;
        data["packets"] = this.packets !== undefined ? this.packets : <any>null;
        data["octets"] = this.octets !== undefined ? this.octets : <any>null;
        return data;
    }
}

export interface FileResponse {
    data: Blob;
    status: number;
    fileName?: string;
    headers?: { [name: string]: any };
}